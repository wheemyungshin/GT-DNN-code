(가상환경 사용)
(제가 만들어 놓은 가상환경에 진입하여 프로그램을 실행할 수 있습니다. 아래의 명령어로 가상환경에 진입하여주십시오.)
cd <keras-retinanet-code 폴더 위치>
virtual\Scripts\activate.bat
(성공하면 (virtual) 표시가 나타나며 가상환경에 진입합니다.)
아래의 명령어를 실행해주세요.
python keras_retinanet\bin\train.py --image-min-side 1200 --image-max-side 1200 --batch-size 4 --lr 0.003 csv <라벨 목록 경로> <클래스 정의 목록 경로>
만약 첨부해드린 데이터 폴더를 keras-retinanet-code 폴더 안으로 옮기면 경로는 아래와 같습니다.
python keras_retinanet\bin\train.py --image-min-side 1200 --image-max-side 1200 --batch-size 4 --lr 0.003 csv data\tune-G123_updated2_val9.csv data\classes_123.csv

(만약 가상환경이 제대로 작동하지 않는다면 직접 가상환경을 구성해주세요.)
----------------------------------가상환경 만들기-----------------------------------

(c++ 요구사항 설치하기)
https://www.scivision.co/python-windows-visual-c-14-required
=> Build Tools for Visual Studio.
=> 링크에서 설치 프로그램 설치 완료되면, 설치 프로그램 실행
=> 워크로드/Visual C++ 빌드 도구 선택.
=> 우측 옵션에서 VS2019 C++ x64/x86 빌드 도구, Windows10 SDK만 선택하고 나머지 선택 취소
=> 다운로드 시작
=>컴퓨터 재시작

(이제 다시 한번 가상환경을 시도해보시고 작동하지 않는다면 아래의 명령어를 cmd창에 차례로 입력해주세요.)
cd <keras-retinanet-code 폴더 위치>
python -m venv virtual
virtual\Scripts\activate.bat
(여기까지 완료되면 경로 왼쪽에 (virtual) 표시가 나타나며 가상환경에 진입합니다.)

(필요 패키지 설치)
python -m pip install --upgrade pip
pip install keras==2.2.4
(gpu를 사용하지 않는 경우)
pip install tensorflow==1.15.0
(gpu를 사용하는 경우)
pip install tensorflow-gpu==1.15.0
pip install .
python setup.py build_ext --inplace

이제 아래의 명령어를 실행해주세요.
python keras_retinanet\bin\train.py --image-min-side 1200 --image-max-side 1200 --batch-size 4 --lr 0.003 csv <라벨 목록 경로> <클래스 정의 목록 경로>
만약 첨부해드린 데이터 폴더를 keras-retinanet-code 폴더 안으로 옮기면 경로는 아래와 같습니다.
python keras_retinanet\bin\train.py --image-min-side 1200 --image-max-side 1200 --batch-size 4 --lr 0.003 csv data\tune-G123_updated2_val9.csv data\classes_123.csv
--------------------------------------------------------------------------------------

(가상환경에서 나가기)
virtual\Scripts\deactivate.bat

(학습 및 명령어 취소)
ctrl+c

